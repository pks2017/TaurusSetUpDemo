<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="DataFeed_UC" enabled="true">
      <stringProp name="TestPlan.comments">Data Feed - POST/GET/PUT/DELETE Operations</stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="loops" elementType="Argument">
            <stringProp name="Argument.name">loops</stringProp>
            <stringProp name="Argument.value">${__P(loopCount,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="env_name" elementType="Argument">
            <stringProp name="Argument.name">env_name</stringProp>
            <stringProp name="Argument.value">${__P(Environment,_Dev)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Global Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting/DataDictionary/DataSet&quot;;,)}/GlobalVar${env_name}.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames"></stringProp>
      </CSVDataSet>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Data Dictionary Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies">
          <elementProp name="c_unique_id" elementType="Cookie" testname="c_unique_id">
            <stringProp name="Cookie.value">${user_key}</stringProp>
            <stringProp name="Cookie.domain">${server_name}</stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
          <elementProp name="appKey" elementType="Cookie" testname="appKey">
            <stringProp name="Cookie.value">${app_key}</stringProp>
            <stringProp name="Cookie.domain">${server_name}</stringProp>
            <stringProp name="Cookie.path"></stringProp>
            <boolProp name="Cookie.secure">false</boolProp>
            <longProp name="Cookie.expires">0</longProp>
            <boolProp name="Cookie.path_specified">true</boolProp>
            <boolProp name="Cookie.domain_specified">true</boolProp>
          </elementProp>
        </collectionProp>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Data Dictionary Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="[TG] - data-feed-configurator-controller" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loops}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[TC] - data-feed-configurator-controller_DataFeed_UC" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Feed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;attributeDensity&quot;: 0,&#xd;
  &quot;booleanBin&quot;: {&#xd;
    &quot;description&quot;: &quot;Test Data Feed 3&quot;,&#xd;
    &quot;id&quot;: 21,&#xd;
    &quot;name&quot;: &quot;Test Data Feed 3&quot;&#xd;
  },&#xd;
  &quot;classSetTag&quot;: {&#xd;
    &quot;classSet&quot;: {&#xd;
      &quot;dataClass&quot;: {&#xd;
        &quot;description&quot;: &quot;string&quot;,&#xd;
        &quot;id&quot;: 3,&#xd;
        &quot;name&quot;: &quot;string&quot;&#xd;
      },&#xd;
      &quot;description&quot;: &quot;string&quot;,&#xd;
   &quot;id&quot;: 21,&#xd;
   &quot;name&quot;: &quot;string&quot;,&#xd;
      &quot;storageIds&quot;: [&#xd;
        {&#xd;
          &quot;classSetId&quot;: 21,&#xd;
          &quot;description&quot;: &quot;string&quot;,&#xd;
          &quot;hiddenIndicator&quot;: true,&#xd;
          &quot;id&quot;: 1,&#xd;
          &quot;masterIndicator&quot;: true,&#xd;
          &quot;name&quot;: &quot;string&quot;,&#xd;
          &quot;storageCategory&quot;: {&#xd;
            &quot;cat&quot;: &quot;string&quot;,&#xd;
            &quot;description&quot;: &quot;string&quot;,&#xd;
            &quot;hiddenIndicator&quot;: true,&#xd;
            &quot;id&quot;: 1,&#xd;
            &quot;name&quot;: &quot;string&quot;&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;id&quot;: 21,&#xd;
    &quot;masterIndicator&quot;: true,&#xd;
    &quot;storageTag&quot;: {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;multivalueIndicator&quot;: true,&#xd;
      &quot;storageId&quot;: {&#xd;
        &quot;classSetId&quot;: 21,&#xd;
        &quot;description&quot;: &quot;string&quot;,&#xd;
        &quot;hiddenIndicator&quot;: true,&#xd;
        &quot;id&quot;: 1,&#xd;
        &quot;masterIndicator&quot;: true,&#xd;
        &quot;name&quot;: &quot;string&quot;,&#xd;
        &quot;storageCategory&quot;: {&#xd;
          &quot;cat&quot;: &quot;string&quot;,&#xd;
          &quot;description&quot;: &quot;string&quot;,&#xd;
          &quot;hiddenIndicator&quot;: true,&#xd;
          &quot;id&quot;: 1,&#xd;
          &quot;name&quot;: &quot;string&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;storageStage&quot;: {&#xd;
        &quot;description&quot;: &quot;string&quot;,&#xd;
        &quot;hiddenIndicator&quot;: true,&#xd;
        &quot;id&quot;: 1,&#xd;
        &quot;name&quot;: &quot;string&quot;,&#xd;
        &quot;stage&quot;: &quot;string&quot;,&#xd;
        &quot;storageBin&quot;: {&#xd;
          &quot;bin&quot;: &quot;string&quot;,&#xd;
          &quot;description&quot;: &quot;string&quot;,&#xd;
          &quot;id&quot;: 1,&#xd;
          &quot;name&quot;: &quot;string&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;tag&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;cleanIndicator&quot;: true,&#xd;
  &quot;confidenceLevel&quot;: 0,&#xd;
  &quot;dataFeedBin&quot;: {&#xd;
    &quot;description&quot;: &quot;Test Data Feed 3&quot;,&#xd;
    &quot;id&quot;: 1,&#xd;
    &quot;name&quot;: &quot;Test Data Feed 3&quot;&#xd;
  },&#xd;
  &quot;daysToExpire&quot;: 0,&#xd;
  &quot;description&quot;: &quot;Test Data Feed 3&quot;,&#xd;
  &quot;hashedDocIdIndicator&quot;: true,&#xd;
  &quot;hashedModifierIndicator&quot;: true,&#xd;
  &quot;hiddenIndicator&quot;: true,&#xd;
  &quot;ignoreUnknownFieldsIndicator&quot;: true,&#xd;
  &quot;lastRunDate&quot;: &quot;string&quot;,&#xd;
  &quot;lastRunStatus&quot;: &quot;string&quot;,&#xd;
  &quot;lastUpdatedDate&quot;: &quot;2018-05-15T13:03:34.196Z&quot;,&#xd;
  &quot;name&quot;: &quot;Test Data Feed 3&quot;,&#xd;
  &quot;sequenceModifierIndicator&quot;: true,&#xd;
  &quot;termCount&quot;: 0,&#xd;
  &quot;timestampBin&quot;: {&#xd;
    &quot;description&quot;: &quot;Test Data Feed 3&quot;,&#xd;
    &quot;id&quot;: 1,&#xd;
    &quot;inUse&quot;: true,&#xd;
    &quot;name&quot;: &quot;Test Data Feed 3&quot;&#xd;
  },&#xd;
  &quot;uniqueGUIDsCount&quot;: 0&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/DataDictionary/v${Endpoint_Version}/dataFeedConfigurator/dataFeed</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="extractDataFeedId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">dataFeedId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">notFoundDataFeedId</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="ComplianceAssertion" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting/DataDictionary/Utility&quot;;,)}/ComplianceAssertion.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">/*
 *Compliance Assertion File Path Script
 ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Utility&quot;;,)}\ComplianceAssertion.groovy
 *
 */

/*
 * Loocal CSV Data File Path Script
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\DataSet&quot;;,)}\CRUD_LocalVar.csv
 */


/*
 * File path for writing Result Tree data
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Reports&quot;;,)}\Result_${__time(MM-dd-yyyy,)}.csv
 */
</stringProp>
            </JSR223Assertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="FieldValidation" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="610498918">&quot;error&quot; : 0</stringProp>
                <stringProp name="1138652984">&quot;name&quot; : &quot;Test Data Feed 3&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Data Feed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/DataDictionary/v${Endpoint_Version}/dataFeedConfigurator/dataFeed?id=${dataFeedId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="ComplianceAssertion" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting/DataDictionary/Utility&quot;;,)}/ComplianceAssertion.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">/*
 *Compliance Assertion File Path Script
 ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Utility&quot;;,)}\ComplianceAssertion.groovy
 *
 */

/*
 * Loocal CSV Data File Path Script
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\DataSet&quot;;,)}\CRUD_LocalVar.csv
 */


/*
 * File path for writing Result Tree data
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Reports&quot;;,)}\Result_${__time(MM-dd-yyyy,)}.csv
 */
</stringProp>
            </JSR223Assertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="FieldValidation" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="610498918">&quot;error&quot; : 0</stringProp>
                <stringProp name="1138652984">&quot;name&quot; : &quot;Test Data Feed 3&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Data Feed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;${dataFeedId}&quot;,&#xd;
    &quot;name&quot;: &quot;Test Data Feed updated..&quot;,&#xd;
    &quot;description&quot;: &quot;Test string updated..&quot;,&#xd;
    &quot;cleanIndicator&quot;: true,&#xd;
    &quot;hashedModifierIndicator&quot;: true,&#xd;
    &quot;hiddenIndicator&quot;: true,&#xd;
    &quot;ignoreUnknownFieldsIndicator&quot;: true,&#xd;
    &quot;sequenceModifierIndicator&quot;: true,&#xd;
    &quot;confidenceLevel&quot;: 0,&#xd;
    &quot;lastRunDate&quot;: &quot;2018-05-17T09:28:56.000Z&quot;,&#xd;
    &quot;lastRunStatus&quot;: &quot;Failed&quot;,&#xd;
    &quot;uniqueGUIDsCount&quot;: 0,&#xd;
    &quot;daysToExpire&quot;: 0,&#xd;
    &quot;hashedDocIdIndicator&quot;: true,&#xd;
    &quot;classSetTag&quot;: {&#xd;
      &quot;id&quot;: 121,&#xd;
      &quot;classSet&quot;: {&#xd;
        &quot;id&quot;: 21,&#xd;
        &quot;name&quot;: &quot;Product&quot;&#xd;
      },&#xd;
      &quot;storageTag&quot;: {&#xd;
        &quot;id&quot;: 1,&#xd;
        &quot;storageId&quot;: {&#xd;
          &quot;id&quot;: 1,&#xd;
          &quot;name&quot;: &quot;cerberus test&quot;&#xd;
        },&#xd;
        &quot;storageStage&quot;: {&#xd;
          &quot;id&quot;: 1,&#xd;
          &quot;storageBin&quot;: {&#xd;
            &quot;id&quot;: 1,&#xd;
            &quot;bin&quot;: &quot;H&quot;,&#xd;
            &quot;name&quot;: &quot;HBase&quot;&#xd;
          },&#xd;
          &quot;stage&quot;: &quot;R&quot;,&#xd;
          &quot;name&quot;: &quot;Raw&quot;,&#xd;
          &quot;hiddenIndicator&quot;: false&#xd;
        },&#xd;
        &quot;tag&quot;: &quot;AR1&quot;,&#xd;
        &quot;multivalueIndicator&quot;: true&#xd;
      },&#xd;
      &quot;masterIndicator&quot;: true&#xd;
    },&#xd;
    &quot;dataFeedBin&quot;: {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;name&quot;: &quot;Internal&quot;&#xd;
    },&#xd;
    &quot;booleanBin&quot;: {&#xd;
      &quot;id&quot;: 21&#xd;
    },&#xd;
    &quot;timestampBin&quot;: {&#xd;
      &quot;id&quot;: 1,&#xd;
      &quot;name&quot;: &quot;Default&quot;,&#xd;
      &quot;inUse&quot;: false&#xd;
    }&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/DataDictionary/v${Endpoint_Version}/dataFeedConfigurator/dataFeed</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="ComplianceAssertion" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting/DataDictionary/Utility&quot;;,)}/ComplianceAssertion.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">/*
 *Compliance Assertion File Path Script
 ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Utility&quot;;,)}\ComplianceAssertion.groovy
 *
 */

/*
 * Loocal CSV Data File Path Script
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\DataSet&quot;;,)}\CRUD_LocalVar.csv
 */


/*
 * File path for writing Result Tree data
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Reports&quot;;,)}\Result_${__time(MM-dd-yyyy,)}.csv
 */
</stringProp>
            </JSR223Assertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="FieldValidation" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="610498918">&quot;error&quot; : 0</stringProp>
                <stringProp name="1461341104">&quot;name&quot; : &quot;Test Data Feed updated..&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Data Feed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/DataDictionary/v${Endpoint_Version}/dataFeedConfigurator/dataFeed?id=${dataFeedId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="ComplianceAssertion" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting/DataDictionary/Utility&quot;;,)}/ComplianceAssertion.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">/*
 *Compliance Assertion File Path Script
 ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Utility&quot;;,)}\ComplianceAssertion.groovy
 *
 */

/*
 * Loocal CSV Data File Path Script
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\DataSet&quot;;,)}\CRUD_LocalVar.csv
 */


/*
 * File path for writing Result Tree data
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Reports&quot;;,)}\Result_${__time(MM-dd-yyyy,)}.csv
 */
</stringProp>
            </JSR223Assertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="FieldValidation" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="610498918">&quot;error&quot; : 0</stringProp>
                <stringProp name="1461341104">&quot;name&quot; : &quot;Test Data Feed updated..&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Data Feed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/DataDictionary/v${Endpoint_Version}/dataFeedConfigurator/dataFeed?id=${dataFeedId}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="ComplianceAssertion" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting/DataDictionary/Utility&quot;;,)}/ComplianceAssertion.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">/*
 *Compliance Assertion File Path Script
 ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Utility&quot;;,)}\ComplianceAssertion.groovy
 *
 */

/*
 * Loocal CSV Data File Path Script
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\DataSet&quot;;,)}\CRUD_LocalVar.csv
 */


/*
 * File path for writing Result Tree data
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Reports&quot;;,)}\Result_${__time(MM-dd-yyyy,)}.csv
 */
</stringProp>
            </JSR223Assertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="FieldValidation" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="610498918">&quot;error&quot; : 0</stringProp>
                <stringProp name="-271441871">&quot;message&quot; : &quot;delete_data_feed normal successful completion&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Data Feed" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/DataDictionary/v${Endpoint_Version}/dataFeedConfigurator/dataFeed?id=${dataFeedId}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="ComplianceAssertion" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting/DataDictionary/Utility&quot;;,)}/ComplianceAssertion.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">/*
 *Compliance Assertion File Path Script
 ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Utility&quot;;,)}\ComplianceAssertion.groovy
 *
 */

/*
 * Loocal CSV Data File Path Script
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\DataSet&quot;;,)}\CRUD_LocalVar.csv
 */


/*
 * File path for writing Result Tree data
 * ${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting\\\DAMsl\\\Reports&quot;;,)}\Result_${__time(MM-dd-yyyy,)}.csv
 */
</stringProp>
            </JSR223Assertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="FieldValidation" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="610498918">&quot;error&quot; : 0</stringProp>
                <stringProp name="-968381897">&quot;data&quot; : null</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${__groovy(import org.apache.jmeter.services.FileServer; String[] baseDirHome = FileServer.getFileServer().getBaseDir().split(&apos;ApiTesting&apos;); def globalDataFilePath = baseDirHome[0]+&quot;ApiTesting/DataDictionary/Reports&quot;;,)}/Result${env_name}_${__time(MM-dd-yyyy,)}.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
