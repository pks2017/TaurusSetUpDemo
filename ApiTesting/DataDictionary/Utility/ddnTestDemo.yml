modules:
  jmeter:
    properties:
      log_level.jmeter: WARN
      #log_level.jmeter.threads: DEBUG
      includecontroller.prefix: C:/Users/psingh/.jenkins/workspace/TaurusDemoLocal
      # Sets the satisfaction threshold for the APDEX calculation (in milliseconds).
      jmeter.reportgenerator.apdex_satisfied_threshold: 2500

      # Sets the tolerance threshold for the APDEX calculation (in milliseconds).
      jmeter.reportgenerator.apdex_tolerated_threshold: 6500

      # Sets the size of the sliding window used by percentile evaluation.
      # Caution : higher value provides a better accuracy but needs more memory.
      jmeter.reportgenerator.statistic_window: 200000

      # Configure this property to change the report title
      jmeter.reportgenerator.report_title: Apache JMeter Dashboard

      # Defines the overall granularity for over time graphs
      jmeter.reportgenerator.overall_granularity: 60000

      # Response Time Percentiles graph definition
      #jmeter.reportgenerator.graph.responseTimePercentiles.classname: org.apache.jmeter.report.processor.graph.impl.ResponseTimePercentilesGraphConsumer
      #jmeter.reportgenerator.graph.responseTimePercentiles.title: Response Time Percentiles

      # Response Time Distribution graph definition
      #jmeter.reportgenerator.graph.responseTimeDistribution.classname: org.apache.jmeter.report.processor.graph.impl.ResponseTimeDistributionGraphConsumer
      #jmeter.reportgenerator.graph.responseTimeDistribution.title: Response Time Distribution
      #jmeter.reportgenerator.graph.responseTimeDistribution.property.set_granularity: 1500

      # Active Threads Over Time graph definition
      #jmeter.reportgenerator.graph.activeThreadsOverTime.classname: org.apache.jmeter.report.processor.graph.impl.ActiveThreadsGraphConsumer
      #jmeter.reportgenerator.graph.activeThreadsOverTime.title: Active Threads Over Time
      #jmeter.reportgenerator.graph.activeThreadsOverTime.property.set_granularity: ${jmeter.reportgenerator.overall_granularity}

      # Time VS Threads graph definition
      #jmeter.reportgenerator.graph.timeVsThreads.classname: org.apache.jmeter.report.processor.graph.impl.TimeVSThreadGraphConsumer
      #jmeter.reportgenerator.graph.timeVsThreads.title: Time VS Threads

      # Bytes Throughput Over Time graph definition
      jmeter.reportgenerator.graph.bytesThroughputOverTime.classname: org.apache.jmeter.report.processor.graph.impl.BytesThroughputGraphConsumer
      jmeter.reportgenerator.graph.bytesThroughputOverTime.title: Bytes Throughput Over Time
      jmeter.reportgenerator.graph.bytesThroughputOverTime.property.set_granularity: ${jmeter.reportgenerator.overall_granularity}

      # Response Time Over Time graph definition
      jmeter.reportgenerator.graph.responseTimesOverTime.classname: org.apache.jmeter.report.processor.graph.impl.ResponseTimeOverTimeGraphConsumer
      jmeter.reportgenerator.graph.responseTimesOverTime.title: Response Time Over Time
      jmeter.reportgenerator.graph.responseTimesOverTime.property.set_granularity: ${jmeter.reportgenerator.overall_granularity}
 
      # Latencies Over Time graph definition
      jmeter.reportgenerator.graph.latenciesOverTime.classname: org.apache.jmeter.report.processor.graph.impl.LatencyOverTimeGraphConsumer
      jmeter.reportgenerator.graph.latenciesOverTime.title: Latencies Over Time
      jmeter.reportgenerator.graph.latenciesOverTime.property.set_granularity: ${jmeter.reportgenerator.overall_granularity}

      # Response Time Vs Request graph definition
      jmeter.reportgenerator.graph.responseTimeVsRequest.classname: org.apache.jmeter.report.processor.graph.impl.ResponseTimeVSRequestGraphConsumer
      jmeter.reportgenerator.graph.responseTimeVsRequest.title: Response Time Vs Request
      jmeter.reportgenerator.graph.responseTimeVsRequest.exclude_controllers: true
      jmeter.reportgenerator.graph.responseTimeVsRequest.property.set_granularity: ${jmeter.reportgenerator.overall_granularity}

      # Latencies Vs Request graph definition
      jmeter.reportgenerator.graph.latencyVsRequest.classname: org.apache.jmeter.report.processor.graph.impl.LatencyVSRequestGraphConsumer
      jmeter.reportgenerator.graph.latencyVsRequest.title: Latencies Vs Request
      jmeter.reportgenerator.graph.latencyVsRequest.exclude_controllers: true
      jmeter.reportgenerator.graph.latencyVsRequest.property.set_granularity: ${jmeter.reportgenerator.overall_granularity}

      # Hits Per Second graph definition
      jmeter.reportgenerator.graph.hitsPerSecond.classname: org.apache.jmeter.report.processor.graph.impl.HitsPerSecondGraphConsumer
      jmeter.reportgenerator.graph.hitsPerSecond.title: Hits Per Second
      jmeter.reportgenerator.graph.hitsPerSecond.exclude_controllers: true
      jmeter.reportgenerator.graph.hitsPerSecond.property.set_granularity: ${jmeter.reportgenerator.overall_granularity}

      # Codes Per Second graph definition
      jmeter.reportgenerator.graph.codesPerSecond.classname: org.apache.jmeter.report.processor.graph.impl.CodesPerSecondGraphConsumer
      jmeter.reportgenerator.graph.codesPerSecond.title: Codes Per Second
      jmeter.reportgenerator.graph.codesPerSecond.exclude_controllers: true
      jmeter.reportgenerator.graph.codesPerSecond.property.set_granularity: ${jmeter.reportgenerator.overall_granularity}

      # Transactions Per Second graph definition
      jmeter.reportgenerator.graph.transactionsPerSecond.classname: org.apache.jmeter.report.processor.graph.impl.TransactionsPerSecondGraphConsumer
      jmeter.reportgenerator.graph.transactionsPerSecond.title: Transactions Per Second
      jmeter.reportgenerator.graph.transactionsPerSecond.property.set_granularity: ${jmeter.reportgenerator.overall_granularity}

      # HTML Export
      jmeter.reportgenerator.exporter.html.classname: org.apache.jmeter.report.dashboard.HtmlTemplateExporter

      # Sets the destination directory for generated html pages.
      # This will be overridden by the command line option -o
      jmeter.reportgenerator.exporter.html.property.output_dir: ApiTesting/DataDictionary/Reports/Results
      jmeter.save.saveservice.assertion_results: all
      jmeter.save.saveservice.output_format: xml
      jmeter.save.saveservice.bytes: false
      jmeter.save.saveservice.label: false
      jmeter.save.saveservice.latency: false
      jmeter.save.saveservice.response_data: true
      jmeter.save.saveservice.response_code: true
      jmeter.save.saveservice.response_message: true
      jmeter.save.saveservice.successful: true
      jmeter.save.saveservice.thread_counts: true
      jmeter.save.saveservice.thread_name: true
      jmeter.save.saveservice.time: true
      jmeter.save.saveservice.timestamp_format: ms
      jmeter.save.saveservice.timestamp_format: yyyy/MM/dd HH:mm:ss
    gui: false
execution:
- scenario: 
    script: ApiTesting/DataDictionary/TestScripts/data-feed-configurator-controller/51_GET_TimestampBins_TC.jmx
- scenario: 
    script: ApiTesting/DataDictionary/TestScripts/data-feed-configurator-controller/52_POST_TimestampBin_TC.jmx
- scenario: 
    script: ApiTesting/DataDictionary/TestScripts/data-feed-configurator-controller/53_GET_TimestampBin_TC.jmx
- scenario: 
    script: ApiTesting/DataDictionary/TestScripts/data-feed-configurator-controller/54_PUT_TimestampBin_TC.jmx