<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="rest-controller_POST_schema_applyFilters_TF" enabled="true">
      <stringProp name="TestPlan.comments">applyFilters</stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="[TF] -POST_schema_applyFilters" enabled="false">
        <stringProp name="TestPlan.comments">applyFilters</stringProp>
      </TestFragmentController>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rest-controller_POST_schema_applyFilters_${TestCaseId}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;classSetId&quot;: ${classSetId},&#xd;
    &quot;filter&quot;: [{&#xd;
                      &quot;field&quot;: &quot;${field}&quot;,&#xd;
                      &quot;tag&quot;: &quot;${tag}&quot;,&#xd;
                      &quot;value&quot;: &quot;${value}&quot;,&#xd;
                      &quot;weight&quot;: ${weight},&#xd;
                      &quot;negate&quot;: ${negate}&#xd;
        }&#xd;
      ],&#xd;
    &quot;collections&quot;: [&#xd;
      {&#xd;
    &quot;name&quot; : &quot;${name}&quot;,&#xd;
    &quot;sST&quot; : &quot;${sST}&quot;,&#xd;
    &quot;field&quot; : [&quot;*&quot;&#xd;
    ],&#xd;
    &quot;page&quot; : {&#xd;
      &quot;pageSize&quot; : ${pageSize},&#xd;
      &quot;pageNumber&quot; : ${pageNumber}&#xd;
    }&#xd;
  },{&#xd;
    &quot;name&quot; : &quot;${name1}&quot;,&#xd;
    &quot;sST&quot; : &quot;${sST1}&quot;,&#xd;
    &quot;field&quot; : [&quot;tJT&quot;, &quot;tCN&quot;&#xd;
    ],&#xd;
    &quot;orderBy&quot;:[{&#xd;
      &quot;field&quot;: &quot;${field1}&quot;,&#xd;
      &quot;order&quot;: &quot;${order}&quot;&#xd;
    }],&#xd;
    &quot;page&quot; : {&#xd;
      &quot;pageSize&quot; : ${pageSize1},&#xd;
      &quot;pageNumber&quot; : ${pageNumber1}&#xd;
    }&#xd;
  },{&#xd;
    &quot;name&quot; : &quot;${name2}&quot;,&#xd;
    &quot;sST&quot; : &quot;${sST2}&quot;,&#xd;
    &quot;field&quot; : [&quot;*&quot;&#xd;
    ],&#xd;
    &quot;filter&quot;: [{&#xd;
      &quot;field&quot;: &quot;${field2}&quot;,&#xd;
      &quot;value&quot;: [&quot;${value1}&quot;]&#xd;
    }],&#xd;
    &quot;page&quot; : {&#xd;
      &quot;pageSize&quot; : ${pageSize2},&#xd;
      &quot;pageNumber&quot; : ${pageNumber2}&#xd;
    }&#xd;
  },{&#xd;
    &quot;name&quot; : &quot;${name3}&quot;,&#xd;
    &quot;sST&quot; : &quot;${sST3}&quot;,&#xd;
    &quot;field&quot; : [&quot;${field3}&quot;],&#xd;
    &quot;page&quot; : {&#xd;
      &quot;pageSize&quot; : ${pageSize3},&#xd;
      &quot;pageNumber&quot; : ${pageNumber3}&#xd;
    }&#xd;
  },{&#xd;
    &quot;name&quot; : &quot;${name4}&quot;,&#xd;
    &quot;sST&quot; : &quot;${sST4}&quot;,&#xd;
    &quot;field&quot; : [&quot;*&quot;],&#xd;
    &quot;page&quot; : {&#xd;
      &quot;pageSize&quot; : ${pageSize4},&#xd;
      &quot;pageNumber&quot; : ${pageNumber4}&#xd;
    }&#xd;
  },{&#xd;
    &quot;field&quot;: [&#xd;
    &quot;${field4}&quot;&#xd;
    ], &#xd;
    &quot;name&quot;: &quot;${name5}&quot;, &#xd;
    &quot;orderBy&quot;: [&#xd;
     {&#xd;
     &quot;field&quot;:&quot;${field4}&quot;,&#xd;
     &quot;order&quot;:&quot;${order2}&quot;&#xd;
     }&#xd;
    ], &#xd;
    &quot;page&quot;: {&#xd;
    &quot;pageNumber&quot;: ${pageNumber5}, &#xd;
    &quot;pageSize&quot;: ${pageSize5}&#xd;
    }, &#xd;
    &quot;sST&quot;: &quot;${sST5}&quot;,&#xd;
    &quot;filter&quot;:[&#xd;
     {&#xd;
     &quot;field&quot;:&quot;${field5}&quot;,&#xd;
     &quot;value&quot;:[&quot;value2&quot;]&#xd;
     }&#xd;
    ]&#xd;
  }&#xd;
    ],&#xd;
    &quot;orderBy&quot;:{&#xd;
        &quot;field&quot;: &quot;${field6}&quot;,&#xd;
        &quot;quickFilter&quot;: &quot;${quickFilter}&quot;,&#xd;
        &quot;order&quot;: &quot;${order3}&quot;&#xd;
    },&#xd;
  &quot;page&quot;: {&#xd;
    &quot;pageSize&quot;: ${pageSize6},&#xd;
    &quot;pageNumber&quot;: ${pageNumber6}&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/rSearch/${schema}/applyFilters?debug=${debug}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">applyFilters

</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
